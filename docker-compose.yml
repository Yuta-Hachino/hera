version: '3.8'

services:
  # ============================================
  # バックエンドAPI (Flask)
  # ============================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hera-backend
    ports:
      - "8080:8080"
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - FLASK_DEBUG=False
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - REDIS_URL=redis://redis:6379/0
      - STORAGE_MODE=redis
      - SESSIONS_DIR=/app/tmp/user_sessions
      - ALLOWED_ORIGINS=http://localhost:3000,http://frontend:3000
      - PORT=8080
    volumes:
      # セッションデータの永続化（画像用）
      - backend-sessions:/app/tmp/user_sessions
      # ログの永続化
      - backend-logs:/app/logs
      # 開発時のホットリロード用（本番では削除推奨）
      - ./backend:/app:ro
    networks:
      - hera-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # ============================================
  # Google ADK開発UI
  # ============================================
  adk:
    image: python:3.11-slim
    container_name: hera-adk
    working_dir: /app
    ports:
      - "8000:8000"
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - PYTHONPATH=/app
      - REDIS_URL=redis://redis:6379/0
      - STORAGE_MODE=redis
      - SESSIONS_DIR=/app/tmp/user_sessions
    volumes:
      - ./backend:/app
      # backendと同じセッションボリュームを共有（画像用）
      - backend-sessions:/app/tmp/user_sessions
      # ログも共有（オプション）
      - backend-logs:/app/logs
    networks:
      - hera-network
    command: >
      bash -c "
        pip install --no-cache-dir -r requirements.txt &&
        python -m google.adk dev --port 8000 --host 0.0.0.0
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    depends_on:
      - backend
      - redis

  # ============================================
  # Redis (セッション管理)
  # ============================================
  redis:
    image: redis:7-alpine
    container_name: hera-redis-local
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - hera-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped

  # ============================================
  # フロントエンド (Next.js)
  # ============================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL=http://localhost:8080
    container_name: hera-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NODE_ENV=production
    networks:
      - hera-network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped

# ============================================
# ボリューム定義
# ============================================
volumes:
  backend-sessions:
    driver: local
  backend-logs:
    driver: local
  redis-data:
    driver: local

# ============================================
# ネットワーク定義
# ============================================
networks:
  hera-network:
    driver: bridge
